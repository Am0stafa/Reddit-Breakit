/* eslint-disable react-hooks/exhaustive-deps */
import { doc, getDoc } from "firebase/firestore";
import { GetServerSidePropsContext } from "next";
import Head from "next/head";
import React, { useEffect } from "react";
import { motion } from "framer-motion";
import { useSetRecoilState } from "recoil";
import safeJsonStringify from "safe-json-stringify";

import { Community, CommunityState } from "../../../atoms/CommunitiesAtom";
import About from "../../../components/Community/About";
import CreatePostLink from "../../../components/Community/CreatePostLink";
import Header from "../../../components/Community/Header";
import NotFound from "../../../components/Community/NotFound";
import PageContent from "../../../components/Layout/PageContent";
import Posts from "../../../components/posts/Posts";
import { firestore } from "../../../firebase/clientApp";

// include the type
type CommunityProps = {
  communityData: Community;
};

const CommunityPage: React.FC<CommunityProps> = ({ communityData }) => {
    const setCommunityStateValue = useSetRecoilState(CommunityState);

    useEffect(() => {
        setCommunityStateValue((prev) => ({
        ...prev,
        currentCommunity: communityData,
        }));
    }, [communityData]);

    if (!communityData) {
        // if we receive an empty string render page not found
        return <NotFound />;
    }

    return (
    <motion.div
    initial={{ opacity: 0 }}
    whileInView={{ opacity: 1 }}
    viewport={{ once: true }}
    >
        <Head>
            <title>Breakit</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/images/header.png" />
        </Head>

        <Header communityData={communityData} />

        <PageContent>
            {/* pass two children */}
            <>
                <CreatePostLink />
                <Posts communityData={communityData} />
            </>

            <>
                <About communityData={communityData} />
            </>
        </PageContent>

    </motion.div>
    );
};

// in this component we are going to use server side rendering and to do that we will use getServerSideProps:
// getServerSideProps is called on the server and then the data is fetched from our database in this function and then passed to the component and then the component id rendered on the server then passed to the client and then the client renders the component
// it is like the web page is being pre-build before its shown to the user

export async function getServerSideProps(context: GetServerSidePropsContext) { // context is for accessing the page router
  //! get data and pass
  try {
    //* get the community document
    const communityDocRef = doc(firestore,"communities",context.query.communityId as string);
    const communityDoc = await getDoc(communityDocRef);

    // JSON.parse(safeJsonStringify( is used to solve serialization error
    // the id is not included in the .data() so you need to call it separately
    return {
      props: {
        communityData: communityDoc.exists() ? JSON.parse(safeJsonStringify({ id: communityDoc.id, ...communityDoc.data() })): "",
      },
    };
  } catch (error) {
    console.log("GetServerSideProps Error: ", error);
  }
}
export default CommunityPage;
